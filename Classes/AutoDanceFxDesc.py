from UAF.Classes.GFX_Vector4 import Object as GFX_Vector4
class Object:
	@staticmethod
	def Serialize(CSerializer,ifstream,jdVersion,sizeOf=True):
		Data = {}
		CSerializer.sizeOf(ifstream,Data) if sizeOf else CSerializer.NULL()
		Data['__class'] = "AutoDanceFxDesc"
		CSerializer.float32(ifstream,Data,"Opacity")
		Data['ColorLow'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		Data['ColorMid'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		Data['ColorHigh'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"LowToMid")
		CSerializer.float32(ifstream,Data,"LowToMidWidth")
		CSerializer.float32(ifstream,Data,"MidToHigh")
		CSerializer.float32(ifstream,Data,"MidToHighWidth")
		Data['SobColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		Data['OutColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"ThickMiddle")
		CSerializer.float32(ifstream,Data,"ThickInner")
		CSerializer.float32(ifstream,Data,"ThickSmooth")
		CSerializer.int32(ifstream,Data,"ShvNbFrames")
		CSerializer.CList_Struct("float32",ifstream,Data,"PartsScale")
		CSerializer.float32(ifstream,Data,"HalftoneFactor")
		CSerializer.float32(ifstream,Data,"HalftoneCutoutLevels")
		CSerializer.float32(ifstream,Data,"UVBlackoutFactor")
		CSerializer.float32(ifstream,Data,"UVBlackoutDesaturation")
		CSerializer.float32(ifstream,Data,"UVBlackoutContrast")
		CSerializer.float32(ifstream,Data,"UVBlackoutBrightness")
		Data['UVBlackoutColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"ToonFactor")
		CSerializer.float32(ifstream,Data,"ToonCutoutLevels")
		CSerializer.CList_Struct("uint32",ifstream,Data,"PlayersProp")
		CSerializer.float32(ifstream,Data,"RefractionFactor")
		Data['RefractionTint'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		Data['RefractionScale'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"RefractionOpacity")
		Data['ColoredShivaThresholds'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		Data['ColoredShivaColor0'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		Data['ColoredShivaColor1'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		Data['ColoredShivaColor2'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"SaturationModifier")
		CSerializer.float32(ifstream,Data,"SlimeFactor")
		Data['SlimeColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"SlimeOpacity")
		CSerializer.float32(ifstream,Data,"SlimeAmbient")
		CSerializer.float32(ifstream,Data,"SlimeNormalTiling")
		CSerializer.float32(ifstream,Data,"SlimeLightAngle")
		CSerializer.float32(ifstream,Data,"SlimeRefraction")
		CSerializer.float32(ifstream,Data,"SlimeRefractionIndex")
		CSerializer.float32(ifstream,Data,"SlimeSpecular")
		CSerializer.float32(ifstream,Data,"SlimeSpecularPower")
		CSerializer.float32(ifstream,Data,"OverlayBlendFactor")
		Data['OverlayBlendColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"BackgroundSobelFactor")
		Data['BackgroundSobelColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"PlayerGlowFactor")
		Data['PlayerGlowColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		
		CSerializer.CList_Struct("uint32",ifstream,Data,"SwapHeadWithPlayer")
		CSerializer.CList_Struct("uint32",ifstream,Data,"AnimatePlayerHead")
		CSerializer.float32(ifstream,Data,"AnimatedHeadTotalTime")
		CSerializer.float32(ifstream,Data,"AnimatedHeadRestTime")
		CSerializer.float32(ifstream,Data,"AnimatedHeadFrameTime")
		CSerializer.float32(ifstream,Data,"AnimatedHeadMaxDistance")
		CSerializer.float32(ifstream,Data,"AnimatedHeadMaxAngle")
		CSerializer.float32(ifstream,Data,"ScreenBlendInverseAlphaFactor")
		CSerializer.float32(ifstream,Data,"ScreenBlendInverseAlphaScaleX")
		CSerializer.float32(ifstream,Data,"ScreenBlendInverseAlphaScaleY")
		CSerializer.float32(ifstream,Data,"ScreenBlendInverseAlphaTransX")
		CSerializer.float32(ifstream,Data,"ScreenBlendInverseAlphaTransY")
		CSerializer.float32(ifstream,Data,"TintMulColorFactor")
		Data['TintMulColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"FloorPlaneFactor")
		Data['FloorPlaneTiles'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"FloorSpeedX")
		CSerializer.float32(ifstream,Data,"FloorSpeedY")
		CSerializer.float32(ifstream,Data,"FloorWaveSpeed")
		CSerializer.int32(ifstream,Data,"FloorBlendMode")
		CSerializer.int32(ifstream,Data,"FloorPlaneImageID")
		CSerializer.float32(ifstream,Data,"StartRadius")
		CSerializer.float32(ifstream,Data,"EndRadius")
		CSerializer.float32(ifstream,Data,"RadiusVariance")
		CSerializer.float32(ifstream,Data,"RadiusNoiseRate")
		CSerializer.float32(ifstream,Data,"RadiusNoiseAmp")
		CSerializer.float32(ifstream,Data,"MinSpin")
		CSerializer.float32(ifstream,Data,"MaxSpin")
		CSerializer.float32(ifstream,Data,"DirAngle")
		CSerializer.float32(ifstream,Data,"MinWanderRate")
		CSerializer.float32(ifstream,Data,"MaxWanderRate")
		CSerializer.float32(ifstream,Data,"MinWanderAmp")
		CSerializer.float32(ifstream,Data,"MaxWanderAmp")
		CSerializer.float32(ifstream,Data,"MinSpeed")
		CSerializer.float32(ifstream,Data,"MaxSpeed")
		CSerializer.float32(ifstream,Data,"MotionPower")
		CSerializer.float32(ifstream,Data,"Amount")
		CSerializer.int32(ifstream,Data,"ImageID")
		CSerializer.float32(ifstream,Data,"StartR")
		CSerializer.float32(ifstream,Data,"StartG")
		CSerializer.float32(ifstream,Data,"StartB")
		CSerializer.float32(ifstream,Data,"EndR")
		CSerializer.float32(ifstream,Data,"EndG")
		CSerializer.float32(ifstream,Data,"EndB")
		CSerializer.float32(ifstream,Data,"StartAlpha")
		CSerializer.float32(ifstream,Data,"EndAlpha")
		CSerializer.float32(ifstream,Data,"TexturedOutlineFactor")
		CSerializer.float32(ifstream,Data,"TexturedOutlineTiling")
		CSerializer.float32(ifstream,Data,"TripleLayerBackgroundFactor")
		Data['TripleLayerBackgroundTintColor'] = GFX_Vector4.Serialize(CSerializer,ifstream,jdVersion,sizeOf=True)
		CSerializer.float32(ifstream,Data,"TripleLayerBackgroundSpeedX")
		CSerializer.float32(ifstream,Data,"TripleLayerBackgroundSpeedY")
		CSerializer.int32(ifstream,Data,"TrailEffectId")
		
		return Data

		